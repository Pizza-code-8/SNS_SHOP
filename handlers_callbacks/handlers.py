from aiogram import F, Router

from aiogram.filters import Command, StateFilter, CommandObject
from aiogram.types import Message

from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.enums.parse_mode import ParseMode
from aiogram.utils.deep_linking import create_start_link, decode_payload

from bot import bot
from kb.kb import main_menu_kb
from kb.ikb import sub_ikb, start_ikb, start_ikb_admin, basket_btn, back_btn_menu, market_category_ikb, make_order
from db.sns_users import check_user, add_user, take_username, add_stat_ref, add_referals, add_discount, take_referals, take_discount, take_stat_ref, take_ref_link, take_basket, take_id_orders
from db.stuff import take_cat_name_from_stuff_by_id, take_stuff_name_from_stuff
from db.category import take_price_from_category_by_name
from db.orders import take_time_of_order, take_basket_from_orders, take_sum_from_orders, take_stat_from_orders, take_adress_from_orders
from admin.admin_id import admin_id

router = Router()

#–ö–æ–º–∞–Ω–¥–∞ /start
@router.message(Command("start"))
async def start(message: Message, command: CommandObject):
    disc_1 = 0.05
    dics_2 = 0.1
    disc_3 = 0.2
    if check_user(message.from_user.id) == True:
        if take_referals(message.from_user.id) >= 250:
            add_discount(message.from_user.id, disc_3)
        elif take_referals(message.from_user.id) >= 50:
            add_discount(message.from_user.id, dics_2)
        elif take_referals(message.from_user.id) >= 5:
            add_discount(message.from_user.id, disc_1)
    link = await create_start_link(bot, str(message.from_user.id), encode=True)
    payload = command.args
    ref_id = decode_payload(payload) if payload else None
    if message.from_user.id == admin_id:
        if check_user(message.from_user.id) == False:
                add_user(user_id=message.from_user.id, username=message.from_user.username, user_name=message.from_user.full_name, ref_link=link)
        await message.answer(
            f"<b>{message.from_user.full_name}</b>, –ø—Ä–∏–≤–µ—Ç!",
            reply_markup=main_menu_kb(),
            parse_mode=ParseMode.HTML
        )
        await message.answer(
            f"üíé–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—åüíé\n\n–ó–¥–µ—Å—å —Ç—ã —Å–º–æ–∂–µ—à—å <b>–æ–±–Ω–æ–≤–∏—Ç—å –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç</b> –∏ <b>–æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>üòâ",
            reply_markup = start_ikb_admin(),
            parse_mode = ParseMode.HTML
        )
    else:
        user = await bot.get_chat_member(chat_id=-1002305724083, user_id=message.from_user.id)
        if user.status == "left":
            if ref_id:
                await message.answer(
                    f"ü•≥–í—ã –∑–∞—à–ª–∏ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ <code>@{take_username(str(ref_id))}</code>",
                    parse_mode=ParseMode.HTML
                    )
                add_user(user_id=message.from_user.id, username=message.from_user.username, user_name=message.from_user.full_name, ref_link=link)
                add_stat_ref(message.from_user.id, str(ref_id))
            await message.answer(
                f"‚ùóÔ∏è–ß—Ç–æ –±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª: https://t.me/snyspavlodar",
                reply_markup=sub_ikb()
            )
        else:
            if check_user(message.from_user.id) == False:
                if ref_id:
                    await message.answer(
                        f"ü•≥–í—ã –∑–∞—à–ª–∏ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ <code>@{take_username(str(ref_id))}</code>",
                        parse_mode=ParseMode.HTML
                        )
                    add_user(user_id=message.from_user.id, username=message.from_user.username, user_name=message.from_user.full_name, ref_link=link)
                    add_stat_ref(message.from_user.id, str(ref_id))
                else:
                    add_user(user_id=message.from_user.id, username=message.from_user.username, user_name=message.from_user.full_name, ref_link=link)
            await message.answer(
                f"–ü—Ä–∏–≤–µ—Ç <b>{message.from_user.full_name}</b>üëã",
                reply_markup=main_menu_kb(),
                parse_mode=ParseMode.HTML
            )
            await message.answer(
                f"–ü–æ–∏–≥—Ä–∞–µ–º –≤ —Ö–æ–∫–∫–µ–π?üòâüèí\n\n–ò—Å–ø–æ–ª—å–∑—É–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–µ /ref, –∏ –∑–∞–∫–∏–¥—ã–≤–∞–π —à–∞–π–±—ã –≤ —Å–≤–æ—é –∫–æ—Ä–∑–∏–Ω—É –∫–∞–∫ –ò—Ä—Ç—ã—à! –ù–æ –¥–∞–∂–µ —É –Ω–∏—Ö –Ω–µ—Ç —Ç–∞–∫–∏—Ö <b>—Å–∫–∏–¥–æ–∫ –∫–∞–∫ —É –Ω–∞—Å</b>\n\n<b>–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã: 11:00-23:00</b>üòéü§ô\n\n–ü—Ä–∏—è—Ç–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫üòÅ",
                reply_markup = start_ikb(),
                parse_mode = ParseMode.HTML
            )

@router.message(Command("profile"))
async def cmd_profile(message: Message):
    disc_1 = 0.05
    dics_2 = 0.1
    disc_3 = 0.2
    if check_user(message.from_user.id) == True:
        if take_referals(message.from_user.id) >= 250:
            add_discount(message.from_user.id, disc_3)
        elif take_referals(message.from_user.id) >= 50:
            add_discount(message.from_user.id, dics_2)
        elif take_referals(message.from_user.id) >= 5:
            add_discount(message.from_user.id, disc_1)
    user = await bot.get_chat_member(chat_id=-1002305724083, user_id=message.from_user.id)
    if user.status == "left":
        await message.answer(
            f"‚ùóÔ∏è–ß—Ç–æ –±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª: https://t.me/snyspavlodar",
            reply_markup=sub_ikb()
        )
    else:
        if take_stat_ref(message.from_user.id) != "None":
            await message.answer(
                f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å!\n\nüë§<b>{message.from_user.full_name}</b>\n‚îú–í–∞—à —é–∑–µ—Ä–Ω–µ–π–º: <code>@{message.from_user.username}</code>\n‚îú–í–∞—à id: <code>{message.from_user.id}</code>\n‚îú–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ—Ñ–µ—Ä–∞–ª–æ–≤: <b>{take_referals(message.from_user.id)}</b>\n‚îú–í–∞—à–∞ —Å–∫–∏–¥–∫–∞: <b>{int(take_discount(message.from_user.id) * 100)}%</b>\n‚îú–í—ã —Ä–µ—Ñ–µ—Ä–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <code>@{take_username(take_stat_ref(message.from_user.id))}</code>\n‚îî–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: <code>{take_ref_link(message.from_user.id)}</code>",
                parse_mode = ParseMode.HTML,
                reply_markup=basket_btn()
            )
        else:
            await message.answer(
                f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å!\n\nüë§<b>{message.from_user.full_name}</b>\n‚îú–í–∞—à —é–∑–µ—Ä–Ω–µ–π–º: <code>@{message.from_user.username}</code>\n‚îú–í–∞—à id: <code>{message.from_user.id}</code>\n‚îú–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ—Ñ–µ—Ä–∞–ª–æ–≤: <b>{take_referals(message.from_user.id)}</b>\n‚îú–í–∞—à–∞ —Å–∫–∏–¥–∫–∞: <b>{int(take_discount(message.from_user.id) * 100)}%</b>\n‚îú–í—ã —Ä–µ—Ñ–µ—Ä–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <code>{take_stat_ref(message.from_user.id)}</code>\n‚îî–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: <code>{take_ref_link(message.from_user.id)}</code>",
                parse_mode = ParseMode.HTML,
                reply_markup=basket_btn()
            )

@router.message(Command("ref"))
async def cnd_ref(message: Message):
    user = await bot.get_chat_member(chat_id=-1002305724083, user_id=message.from_user.id)
    if user.status == "left":
        await message.answer(
            f"‚ùóÔ∏è–ß—Ç–æ –±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª: https://t.me/snyspavlodar",
            reply_markup=sub_ikb()
        )
    else:
        await message.answer(
            f"üí∏–£—Å–ª–æ–≤–∏—è –Ω–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã\n\nü´µ<b>üíµ<b>5%</b> - –∑–∞ 5 –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –∏ —Å–¥–µ–ª–∞–≤—à–∏—Ö –∑–∞–∫–∞–∑ –¥—Ä—É–∑–µ–π\nüí∞<b>10%</b> - –∑–∞ 50 –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π\nüíé<b>20%</b> - –∑–∞ 250 –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π\n\nüî•<b>–°–∫–∏–¥–∫–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç –ø–æ–∂–∏–∑–Ω–µ–Ω–Ω–æ –Ω–∞ –≤—Å–µ –∑–∞–∫–∞–∑—ã</b>üî•\n\nüó£–°–∫–æ—Ä–µ–π –Ω–∞—á–∏–Ω–∞–π –¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª–∫–æ–π: <code>{take_ref_link(message.from_user.id)}</code>",
            parse_mode=ParseMode.HTML,
            reply_markup = back_btn_menu()
        )

#–ö–ª–∞–≤–∞–∏—Ç—É—Ä–∞

@router.message(F.text.lower() == "üè†")
async def show_menu(message: Message):
    disc_1 = 0.05
    dics_2 = 0.1
    disc_3 = 0.2
    if check_user(message.from_user.id) == True:
        if take_referals(message.from_user.id) >= 250:
            add_discount(message.from_user.id, disc_3)
        elif take_referals(message.from_user.id) >= 50:
            add_discount(message.from_user.id, dics_2)
        elif take_referals(message.from_user.id) >= 5:
            add_discount(message.from_user.id, disc_1)
    await message.answer(
        f"–ü–æ–∏–≥—Ä–∞–µ–º –≤ —Ö–æ–∫–∫–µ–π?üòâüèí\n\n–ò—Å–ø–æ–ª—å–∑—É–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–µ /ref, –∏ –∑–∞–∫–∏–¥—ã–≤–∞–π —à–∞–π–±—ã –≤ —Å–≤–æ—é –∫–æ—Ä–∑–∏–Ω—É –∫–∞–∫ –ò—Ä—Ç—ã—à! –ù–æ –¥–∞–∂–µ —É –Ω–∏—Ö –Ω–µ—Ç —Ç–∞–∫–∏—Ö <b>—Å–∫–∏–¥–æ–∫ –∫–∞–∫ —É –Ω–∞—Å</b>üòéü§ô\n\n–ü—Ä–∏—è—Ç–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫üòÅ",
        reply_markup = start_ikb(),
        parse_mode = ParseMode.HTML
        )
    
@router.message(F.text.lower() == "üõç")
async def show_shop(message: Message):
    disc_1 = 0.05
    dics_2 = 0.1
    disc_3 = 0.2
    if check_user(message.from_user.id) == True:
        if take_referals(message.from_user.id) >= 250:
            add_discount(message.from_user.id, disc_3)
        elif take_referals(message.from_user.id) >= 50:
            add_discount(message.from_user.id, dics_2)
        elif take_referals(message.from_user.id) >= 5:
            add_discount(message.from_user.id, disc_1)
    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ωüéâ",
        reply_markup=market_category_ikb()
    )

@router.message(F.text.lower() == "üõí")
async def show_basket(message: Message):
    disc_1 = 0.05
    dics_2 = 0.1
    disc_3 = 0.2
    if check_user(message.from_user.id) == True:
        if take_referals(message.from_user.id) >= 250:
            add_discount(message.from_user.id, disc_3)
        elif take_referals(message.from_user.id) >= 50:
            add_discount(message.from_user.id, dics_2)
        elif take_referals(message.from_user.id) >= 5:
            add_discount(message.from_user.id, disc_1)
    uid = message.from_user.id
    if take_basket(uid) != None:
        price = 0
        for item in take_basket(uid):
            print
            name = take_cat_name_from_stuff_by_id(item)
            price += take_price_from_category_by_name(name)
        if take_discount(uid) != 0:
            new_price = price - (price * take_discount(uid))
        else:
            new_price = price
        start_string = "üõí<b>–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞:</b>\n\n"
        midle_string = ""
        item_list = []
        for item in take_basket(uid):
            if item not in item_list:
                item_list.append(item)
        for item in item_list:
            n = take_basket(uid).count(item)
            name = take_cat_name_from_stuff_by_id(item)
            price += take_price_from_category_by_name(name)
            end_string = f"\nüöÄ–°–∫–∏–¥–∫–∞: <b>{int(take_discount(uid) * 100)}%</b>\n\nüí∏–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —á–µ–∫–∞ (c —É—á–µ—Ç–æ–º —Å–∫–∏–¥–∫–∏): <b>{new_price}—Ç–≥</b>"
            new_string = midle_string + f"<b>{name} {take_stuff_name_from_stuff(item)}</b> - <b>{n} —à—Ç—É–∫</b>: <b>{take_price_from_category_by_name(name) * n}—Ç–≥</b>\n---------------------------\n"
            midle_string = new_string
        fin_string = start_string + new_string + end_string
        await message.answer(
            f"{fin_string}",
            parse_mode=ParseMode.HTML,
            reply_markup=make_order()
        )
    else:
        await message.answer(
            "–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞‚òπÔ∏è",
            reply_markup=make_order()
        )

@router.message(F.text.lower() == "üóÇ")
async def cmd_orders(message: Message):
    uid = message.from_user.id
    orders = take_id_orders(uid)
    try:
        for id in orders:
            print(id)
            item_list = []
            fin_user = f"ID –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞: <code>{id}</code>\n\n–í—Ä–µ–º—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞: <code>{take_time_of_order(id)}</code>\n\n–ê–¥—Ä–µ—Å –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏: <b>{take_adress_from_orders(id)}</b>\n\n–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: <b>{take_stat_from_orders(id)}</b>\n\n<b>–û–ø–ª–∞—Ç–∞ –∑–∞–∫–∞–∑–∞ –±—É–¥–µ—Ç –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞–ª–∏—á–Ω—ã–º–∏/–∫–∞—Ä—Ç–æ–π</b>ü§ù\n\n–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞: <b>1-2 —á–∞—Å–∞</b>\n\n"
            end_string = f"\nüöÄ–°–∫–∏–¥–∫–∞: <b>{int(take_discount(uid) * 100)}%</b>\n\nüí∏–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —á–µ–∫–∞ (c —É—á–µ—Ç–æ–º —Å–∫–∏–¥–∫–∏): <b>{take_sum_from_orders(id)}—Ç–≥</b>"
            midle_string = ""
            basket = take_basket_from_orders(id)
            for item in basket:
                if item not in item_list:
                    item_list.append(item)
            for item in item_list:
                n = basket.count(item)
                name = take_cat_name_from_stuff_by_id(item)
                end_string = f"\nüöÄ–°–∫–∏–¥–∫–∞: <b>{int(take_discount(uid) * 100)}%</b>\n\nüí∏–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —á–µ–∫–∞ (c —É—á–µ—Ç–æ–º —Å–∫–∏–¥–∫–∏): <b>{take_sum_from_orders(id)}—Ç–≥</b>"
                new_string = midle_string + f"<b>{name} {take_stuff_name_from_stuff(item)}</b> - <b>{n} —à—Ç—É–∫</b>: <b>{take_price_from_category_by_name(name) * n}—Ç–≥</b>\n---------------------------\n"
                midle_string = new_string
            fin_user_string = fin_user + new_string + end_string
            await message.answer(
                f"{fin_user_string}",
                parse_mode=ParseMode.HTML,
                reply_markup=back_btn_menu()
            )
    except:
        await message.answer(
            "–£ –≤–∞—Å –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤"
        )